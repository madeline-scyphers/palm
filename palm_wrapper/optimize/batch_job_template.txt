#!/bin/bash
#SBATCH --job-name={{ job_name }}
#SBATCH --time={{ batch_time }}
#SBATCH --nodes={{ nodes }} --ntasks-per-node={{ ntasks_per_node }}
#SBATCH --output={{ log_file }}
#SBATCH --account=PAS0409

set -x  # for displaying the commands in the log for debugging

config_path={{ config_path }}
job_name={{ job_name }}
run_time={{ run_time }}
working_dir={{ working_dir }}
working_dir_output=$working_dir/{{ job_name }}/OUTPUT
job_output_dir={{ job_output_dir }}
palm_wrapper_pkg_path={{ palm_wrapper_pkg_path }}
config_writer_path=~/palm/palm_wrapper/main.py
data_analyzer_path=~/palm/palm_wrapper/analyze_rca.py
model_path={{ model_path }}
io_config={{ io_config }}

current_dir=`pwd`

mkdir -p $working_dir
mkdir -p $working_dir_output

python $config_writer_path --config_file $config_path --input_dir $working_dir --job_name $job_name

ls $working_dir
ls $working_dir/$job_name


cd $model_path

palmrun -r $job_name -c default -X{{ nodes * ntasks_per_node }} -T{{ ntasks_per_node }} -q parallel -t $run_time -a ${io_config} -v -m 4315

cd $current_dir

python data_analyzer_path --input_dir $working_dir --output_dir $working_dir_output

function move_output() {
#    cd $SLURM_SUBMIT_DIR
    job_output=$job_output_dir/output
    mkdir -p $job_output
    cp -R $working_dir_output/r_ca.json $job_output/r_ca.json
    # cp -R $working_dir_output $job_output_dir/output
    cp -R $working_dir $job_output_dir
  exit
}

move_output
trap move_output TERM